import os
import typer
import PyInstaller.__main__
from pywr_editor.assets import get_parameters, get_nodes, get_recorders
from datetime import datetime
from pathlib import Path

app = typer.Typer(pretty_exceptions_enable=False)


@app.command()
def publish():
    """
    Creates the executable.
    """
    build_file()

    typer.secho(
        ">> Building executable with PyInstaller",
        fg=typer.colors.GREEN,
        bold=True,
    )
    PyInstaller.__main__.run(
        [
            "main.spec",
            "--noconfirm",
        ]
    )
    typer.secho(
        ">> Done :)",
        fg=typer.colors.GREEN,
        bold=True,
    )


@app.command()
def build_file():
    """
    Generates the build information file.
    """
    fid = open("VERSION", mode="r")
    version = fid.read()
    fid.close()

    # PYX file
    code = f"""# File autogenerated on {datetime.now()}
def build_info():
    return {{
        'Version': '{version}',
        'Build date': '{datetime.now().strftime('%d %b %Y')}',
    }}\n"""

    fid = open(Path(__file__).parent / "pywr_editor" / "build_info.py", "w")
    fid.write(code)
    fid.close()


@app.command()
def editor_assets():
    """
    Generates the editor assets.
    """
    assets_path = Path(__file__).parent / "pywr_editor" / "assets"
    qrc_file = assets_path / "assets.qrc"
    py_file = assets_path.parent / "style" / "assets.py"
    os.system(f'pyside6-rcc.exe "{qrc_file}" -o "{py_file}"')

    typer.secho(f">> Generated {py_file}", fg=typer.colors.GREEN, bold=True)


@app.command()
def pywr_assets():
    """
    Generates the pywr assets.
    """
    typer.secho(
        f">> Creating parameter names dictionary",
        fg=typer.colors.GREEN,
        bold=True,
    )
    get_parameters()
    typer.secho(
        f">> Creating node names dictionary", fg=typer.colors.GREEN, bold=True
    )
    get_nodes()
    typer.secho(
        f">> Creating recorder names dictionary",
        fg=typer.colors.GREEN,
        bold=True,
    )
    get_recorders()

    qrc_file = (
        Path(__file__).parent / "pywr_editor" / "assets" / "pywr_resources.qrc"
    )
    py_file = Path(__file__).parent / "pywr_editor" / "model" / "pywr_data.py"
    os.system(f'pyside6-rcc.exe "{qrc_file}" -o "{py_file}"')

    typer.secho(f">> Generated {py_file}", fg=typer.colors.GREEN, bold=True)


if __name__ == "__main__":
    app()
